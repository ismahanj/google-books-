{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abdiazizdude/code/google-books/client/src/pages/Save.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n\nfunction Saved() {\n  _s();\n\n  const [saved, setSaved] = useState([]);\n\n  function deleteBooks(id) {\n    API.deleteBooks(id).then(res => res).catch(err => console.log(err));\n  } // get all the books from the db then put them in the array \n\n\n  useEffect(() => {\n    API.savedBooks().then(res => {\n      setSaved(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [saved]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-12 sm-12\",\n        children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Google Books Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Search For Your Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-12 sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Saved Books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: saved.length ? saved.map(book => /*#__PURE__*/_jsxDEV(Col, {\n            size: \"sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 border  p-3 rounded shadow \",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: book.image,\n                alt: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n                onClick: () => deleteBooks(book._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/books/\" + book.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"m-4\",\n                children: [\"Title: \", book.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Author: \", book.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-3\",\n                children: [\"Description: \", book.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: book.link,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: \" link to book \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, book._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Saved Books to Display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Saved, \"i9231ModMUAMpLxiEOPaOQf+ceU=\");\n\n_c = Saved;\nexport default Saved;\n\nvar _c;\n\n$RefreshReg$(_c, \"Saved\");","map":{"version":3,"sources":["/Users/abdiazizdude/code/google-books/client/src/pages/Save.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","Saved","saved","setSaved","deleteBooks","id","then","res","catch","err","console","log","savedBooks","data","length","map","book","image","title","_id","author","description","link"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n\n\nfunction Saved() {\n\n  const [saved, setSaved] = useState([]);\n\n  function deleteBooks(id) {\n    API.deleteBooks(id)\n      .then(res => res)\n      .catch(err => console.log(err));\n  }\n\n  // get all the books from the db then put them in the array \n\n  useEffect(() => {\n    API.savedBooks()\n      .then(res => {\n        setSaved(res.data);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }, [saved])\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12 sm-12\">\n          <Jumbotron>\n            <h1>Google Books Search</h1>\n            <h3>Search For Your Books</h3>\n          </Jumbotron>\n        </Col>\n        <Col size=\"md-12 sm-12\" >\n          <h1>Saved Books</h1>\n          <Row>\n            {saved.length ? (\n\n              saved.map(book => (\n                <Col size='sm-12' key={book._id}>\n                  <div className=\"mb-4 border  p-3 rounded shadow \">\n                    <img src={book.image} alt={book.title} />\n                    <DeleteBtn onClick={() => deleteBooks(book._id)} />\n                    <Link to={\"/books/\" + book.id} />\n                    <strong className=\"m-4\">\n                      Title: {book.title}\n                    </strong>\n                    <strong>\n                      Author: {book.author}\n                    </strong>\n                    <p className=\"mt-3\" >\n                      Description: {book.description}\n                    </p>\n                    <strong>\n                      <a href={book.link} target=\"_blank\" rel=\"noopener noreferrer\"> link to book </a>\n                    </strong>\n                  </div>\n                </Col>\n              ))\n\n            ) : (\n                <h3>No Saved Books to Display</h3>\n              )}\n\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\n\nexport default Saved;"]},"metadata":{},"sourceType":"module"}